

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;


ENTITY INSTRUCTION_FETCH_UNIT IS 
	PORT(		pc_en     : IN STD_LOGIC;
				mar_en    : IN STD_LOGIC;
				wr_en_pc  : IN STD_LOGIC;
				wr_en_mar : IN STD_LOGIC;
				rst       : IN STD_LOGIC;
				clk       : IN STD_LOGIC;
				jmp_addr  : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
				mar_out   : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
	);
END INSTRUCTION_FETCH_UNIT;



ARCHITECTURE BHV OF INSTRUCTION_FETCH_UNIT IS
	SIGNAL mid_cnt_v : STD_LOGIC_VECTOR(31 DOWNTO 0) := (OTHERS => '0');

	COMPONENT PROGRAM_COUNTER_32_BIT IS
		PORT(	en		  : IN  STD_LOGIC;
				clk     : IN  STD_LOGIC;
				wr_en   : IN  STD_LOGIC;
				rst     : IN  STD_LOGIC;
				jmp_v   : IN  STD_LOGIC_VECTOR(31 DOWNTO 0);	
				cnt_v   : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)		
		);
	END COMPONENT;

	COMPONENT REGISTER32 IS 
		PORT( en    : IN  STD_LOGIC;
				rst   : IN  STD_LOGIC;
				wr_en : IN  STD_LOGIC;
				d_in  : IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
				d_out : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
		);
	END COMPONENT;

	BEGIN --INIZIA IL COMPORTAMENTO 
		PC  : PROGRAM_COUNTER_32_BIT PORT MAP( en => pc_en, clk => clk, wr_en => wr_en_pc, rst => rst, jmp_v => jmp_addr, cnt_v => d_inmid_cnt_v);
		MAR : REGISTER32 PORT MAP(en => mar_en, rst => rst, wr_en => wr_en_mar, d_in => mid_cnt_v, d_out => mar_out);

END BHV;